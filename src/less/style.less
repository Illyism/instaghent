@import url(http://fonts.googleapis.com/css?family=Open+Sans:400,300,700);
@import "semantic.min.css";

*, *:before, *:after {
	-webkit-box-sizing: border-box;
	-moz-box-sizing: border-box;
	-ms-box-sizing: border-box;
	-o-box-sizing: border-box;
	box-sizing: border-box;
}

body {
	font-family: 'Open Sans', sans-serif;
	font-weight: 300;
	margin: 0px;
}

a {
	color: #000;
	text-decoration: none;
	font-weight: 700;
}

h1, h2, h3, h4, h5, h6, .ui.header {
	font-weight: 300;
}

.transition(@duration:0.2s, @ease:ease-out) {
  -webkit-transition: all @duration @ease;
  -moz-transition: all @duration @ease;
  -o-transition: all @duration @ease;
  transition: all @duration @ease;
}

.drop-shadow(@x-axis: 0, @y-axis: 1px, @blur: 2px, @alpha: 0.1) {
  -webkit-box-shadow: @x-axis @y-axis @blur rgba(0, 0, 0, @alpha);
  -moz-box-shadow: @x-axis @y-axis @blur rgba(0, 0, 0, @alpha);
  box-shadow: @x-axis @y-axis @blur rgba(0, 0, 0, @alpha);
}

.bordered-shadow() {
	-webkit-box-shadow: 0 0 0px 2px rgba(255,255,255,0.5), 0 0 10px 2px rgba(0,0,0,0.5);
	-moz-box-shadow: 0 0 0px 2px rgba(255,255,255,0.5), 0 0 10px 2px rgba(0,0,0,0.5);
	box-shadow: 0 0 0px 2px rgba(255,255,255,0.5), 0 0 10px 2px rgba(0,0,0,0.5);
}

.content .photos {
	.photo {
		width: 25%;
		float: left;
		.transition;
		@media (max-width: 1300px) {
			width: 33%;
		}
		@media (max-width: 960px) {
			width: 50%;
		}
		@media (max-width: 700px) {
			width: 100%;
		}
		@media (max-width: 320px) {
			width: 100%;
		}
		.image {
			img {
				.transition;
				position: relative;
				z-index: 10;
				width: 100%;
			}
		}
		.meta.menu {
			.transition;
			.bordered-shadow;
			height: 0px;
			padding: 0px;
			margin: 0px;
			margin-top: -85px;
			opacity: 0;
			border-top-left-radius: 0px;
			border-top-right-radius: 0px;
			border-bottom-right-radius: 5px;
			border-bottom-left-radius: 5px;
			position: relative;
			top: 0px;
			z-index: 50;
			.sub.menu {
				clear: both;
				.rating {
					.icon {
						&:hover, &:focus {
							color: #555;
						}
						&:active, &.active {
							color: #000;
						}
					}
				}
			}
			@media (max-width: 320px) {
				text-align: center;
				margin-top: -170px;
				.menu {
					text-align: center;
					width: 100%;
				}
			}
		}
		.caption {
			.transition;
			background: rgba(0,0,0,0.5);
			color: rgba(255,255,255,0.9);
			overflow: hidden;
			margin: 0px;
			margin-top: -61px;
			padding: 20px;
			z-index: 150;
			position: relative;
			width: 100%;
			word-wrap: break-word;
			text-overflow: ellipsis;
			white-space: nowrap;
			opacity: 0;
		}
		&:hover, &:focus, &.active {
			.bordered-shadow;
			position: relative;
			z-index: 200;
			.image img {
				z-index: 100;
			}
			.caption {
				opacity: 1;
			}
			.meta.menu {
				height: auto;
				padding: initial;
				margin-top: -85px;
				opacity: 1;
				position: relative;
				top: 85px;
				@media (max-width: 320px) {
					text-align: center;
					margin-top: -170px;
					top: 170px;
				}
			}
		}
	}
}


.inner-shadow(@horizontal:0, @vertical:1px, @blur:2px, @alpha: 0.4) {
  -webkit-box-shadow: inset @horizontal @vertical @blur rgba(0, 0, 0, @alpha);
  -moz-box-shadow: inset @horizontal @vertical @blur rgba(0, 0, 0, @alpha);
  box-shadow: inset @horizontal @vertical @blur rgba(0, 0, 0, @alpha);
}

.top.menu {
	@media (max-width: 320px) {
		.home.item {
			color: #fff;
			width: 0px;
			&:before {
				content:  "\f015";
				color: rgba(0,0,0,.75);
				margin: 12px;
				font-family: "Icons";

			}
		}
	}
}

.navigation.sidebar {
	padding: 1em 1.5em;
	font-weight: 300;
	.inner-shadow(-7px, 0px, 7px, 0.1);
	a, .item {
		font-weight: 300;
	}
}

.contain {
	max-width: 960px;
	margin: auto;
	display: block;
	margin-bottom: 30px;
	margin-top: 100px;
	.title, .title a {
		color: gray;
		font-size: 18px;
		font-weight: 300;
		max-width: 100%;
		position: relative;
		white-space: normal;
		margin-bottom: 1em;
	}
	a.item {
		font-weight: 300;
	}
	p.caption {
		word-wrap: break-word;
	}

}

// .RdYlGn .q0-11
// 197.3Â°, 73.8, 43.3
 
// helper class, will never show up in resulting css
// will be called as long the index is above 0
.loop (@index, @mixin: '') when (@index > 0) {
 
	// create the actual css selector
        // use (~'.@{class}_@{index}') for LESS version < 1.4
	.q@{index}-11 {
		fill: hsl(197, 0.9, 1 - 0.03 * @index);
	}
 
	// next iteration
	.loop(@index - 1, @mixin);
}
 
// end the loop when index is 0
.loop (0) {}

.RdYlGn {
	.loop(50, "hsl")
}